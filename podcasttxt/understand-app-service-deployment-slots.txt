<speak xmlns="http://www.w3.org/2001/10/synthesis" xmlns:mstts="http://www.w3.org/2001/mstts" xmlns:emo="http://www.w3.org/2009/10/emotionml" version="1.0" xml:lang="en-US">
  <voice name="en-US-BrianNeural">
    Welcome to the Microsoft Learn Podcast, the show where we dive deep into the world of technology and explore the latest advancements in the industry. I'm your host, Brian, and today we have a special guest joining us. Please welcome Andrew, who works for Contoso. Andrew, why don't you introduce yourself and tell us a bit about your role at Contoso?
  </voice>
  <voice name="en-US-AndrewNeural">
    Thanks, Brian. It's great to be here. My name is Andrew and I'm a software engineer at Contoso. I primarily work with Azure App Service and deployment slots.
  </voice>
  <voice name="en-US-BrianNeural">
    That's fantastic, Andrew. Today, we're going to talk about deployment slots in App Service. Can you start by explaining the benefits of using deployment slots?
  </voice>
  <voice name="en-US-AndrewNeural">
    Absolutely, Brian. Deployment slots in App Service provide a staging environment for your web app. This allows you to validate app changes before swapping them with the production slot. It also ensures that all instances of the slot are warmed up before being swapped into production, eliminating downtime. Additionally, if the changes swapped into the production slot aren't as expected, you can easily revert back to the previous version.
  </voice>
  <voice name="en-US-BrianNeural">
    That's really useful, Andrew. So, how does slot swapping operate in App Service?
  </voice>
  <voice name="en-US-AndrewNeural">
    When you swap two slots, App Service applies the settings from the target slot to all instances of the source slot. This includes app settings, connection strings, continuous deployment settings, and more. All instances in the source slot are then restarted. If local cache is enabled, it triggers local cache initialization. If auto swap is enabled, it triggers Application Initiation. Once all instances are warmed up, the routing rules for the two slots are switched, and the target slot now has the app that was previously in the source slot. The same operation is then performed on the source slot.
  </voice>
  <voice name="en-US-BrianNeural">
    That's a comprehensive explanation, Andrew. Now, let's talk about how to perform manual swaps and enable auto swap. Can you walk us through the process?
  </voice>
  <voice name="en-US-AndrewNeural">
    Certainly, Brian. To perform a manual swap, you can go to your app's Deployment slots page and select the Swap option. You'll see the settings in the selected source and target slots that will be changed. You can review the configuration changes and then initiate the swap. If you want to preview the swap before completing it, you can select the Perform swap with preview option. This allows you to validate the app with the swapped settings before finalizing the swap. To enable auto swap, you can go to your app's resource page, select the deployment slot you want to configure, and set Auto swap enabled to On. This way, every time you push code changes to that slot, App Service will automatically swap the app into production after it's warmed up in the source slot.
  </voice>
  <voice name="en-US-BrianNeural">
    That's really helpful, Andrew. Now, let's discuss how to route traffic manually and automatically in App Service. Can you explain how this works?
  </voice>
  <voice name="en-US-AndrewNeural">
    Certainly, Brian. By default, all client requests to the app's production URL are routed to the production slot. However, you can route a portion of the traffic to another slot. To route production traffic automatically, you can specify a percentage of traffic to be routed to the non-production slot. This is useful for gathering user feedback on new updates. To route production traffic manually, you can use the x-ms-routing-name query parameter. By specifying the name of the slot in the query parameter, you can route requests to a specific slot. This is useful for allowing users to opt in or opt out of a beta app.
  </voice>
  <voice name="en-US-BrianNeural">
    That's a great feature, Andrew. Now, let's do a quick knowledge check to see how well our listeners have understood the concepts we discussed today.
  </voice>
  <voice name="en-US-AndrewNeural">
    Sure, Brian. Let's do it.
  </voice>
  <voice name="en-US-BrianNeural">
    Question 1: By default, what is the routing rule applied to new deployment slots?
  </voice>
  <voice name="en-US-AndrewNeural">
    The default routing rule applied to new deployment slots is 0%.
  </voice>
  <voice name="en-US-BrianNeural">
    Question 2: Which settings are swapped when performing a slot swap?
  </voice>
  <voice name="en-US-AndrewNeural">
    The settings that are swapped include general settings, app settings, connection strings, handler mappings, public certificates, and more.
  </voice>
  <voice name="en-US-BrianNeural">
    Great job, Andrew. Now, let's wrap up this episode. In this module, we covered the benefits of using deployment slots in App Service, how slot swapping operates, performing manual swaps, enabling auto swap, and routing traffic manually and automatically. Thank you, Andrew, for joining us today and sharing your expertise.
  </voice>
  <voice name="en-US-AndrewNeural">
    Thank you, Brian. It was a pleasure being here and discussing deployment slots in App Service.
  </voice>
  <voice name="en-US-BrianNeural">
    And thank you to our listeners for tuning in to the Microsoft Learn Podcast. We hope you found this episode informative and valuable. Stay tuned for more exciting topics in the world of technology. Until next time, happy learning!
  </voice>
</speak>